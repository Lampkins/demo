package com.example.demo.pojo;

import com.fasterxml.jackson.annotation.JsonFormat;

import java.io.Serializable;
import java.util.Date;

public class User implements Serializable {
    /**
     * 主键
     * 表字段 : user.id
     */
    private Long id;

    /**
     * 登录名，使用电话号码作为登录名
     * 表字段 : user.mobile
     */
    private String mobile;

    /**
     * 登录密码
     * 表字段 : user.password
     */
    private String password;

    /**
     * 性别
     * 表字段 : user.sex
     */
    private String sex;

    /**
     * 出生日期
     * 表字段 : user.birthdate
     */
    @JsonFormat(pattern = "yyyy-MM-dd")
    private Date birthdate;

    /**
     * 详细地址
     * 表字段 : user.address
     */
    private String address;

    /**
     * 邮箱
     * 表字段 : user.email
     */
    private String email;

    /**
     * -1:表示删除 ，1：正常状态
     * 表字段 : user.state
     */
    private String state;

    /**
     * 创建时间
     * 表字段 : user.create_time
     */
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private Date create_time;

    /**
     * 修改时间
     * 表字段 : user.update_time
     */
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private Date update_time;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:user.id
     *
     * @return user.id, 主键
     */
    public Long getId() {
        return id;
    }

    /**
     * 设置 主键 字段:user.id
     *
     * @param id the value for user.id, 主键
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * 获取 登录名，使用电话号码作为登录名 字段:user.mobile
     *
     * @return user.mobile, 登录名，使用电话号码作为登录名
     */
    public String getMobile() {
        return mobile;
    }

    /**
     * 设置 登录名，使用电话号码作为登录名 字段:user.mobile
     *
     * @param mobile the value for user.mobile, 登录名，使用电话号码作为登录名
     */
    public void setMobile(String mobile) {
        this.mobile = mobile == null ? null : mobile.trim();
    }

    /**
     * 获取 登录密码 字段:user.password
     *
     * @return user.password, 登录密码
     */
    public String getPassword() {
        return password;
    }

    /**
     * 设置 登录密码 字段:user.password
     *
     * @param password the value for user.password, 登录密码
     */
    public void setPassword(String password) {
        this.password = password == null ? null : password.trim();
    }

    /**
     * 获取 性别 字段:user.sex
     *
     * @return user.sex, 性别
     */
    public String getSex() {
        return sex;
    }

    /**
     * 设置 性别 字段:user.sex
     *
     * @param sex the value for user.sex, 性别
     */
    public void setSex(String sex) {
        this.sex = sex == null ? null : sex.trim();
    }

    /**
     * 获取 出生日期 字段:user.birthdate
     *
     * @return user.birthdate, 出生日期
     */
    public Date getBirthdate() {
        return birthdate;
    }

    /**
     * 设置 出生日期 字段:user.birthdate
     *
     * @param birthdate the value for user.birthdate, 出生日期
     */
    public void setBirthdate(Date birthdate) {
        this.birthdate = birthdate;
    }

    /**
     * 获取 详细地址 字段:user.address
     *
     * @return user.address, 详细地址
     */
    public String getAddress() {
        return address;
    }

    /**
     * 设置 详细地址 字段:user.address
     *
     * @param address the value for user.address, 详细地址
     */
    public void setAddress(String address) {
        this.address = address == null ? null : address.trim();
    }

    /**
     * 获取 邮箱 字段:user.email
     *
     * @return user.email, 邮箱
     */
    public String getEmail() {
        return email;
    }

    /**
     * 设置 邮箱 字段:user.email
     *
     * @param email the value for user.email, 邮箱
     */
    public void setEmail(String email) {
        this.email = email == null ? null : email.trim();
    }

    /**
     * 获取 -1:表示删除 ，1：正常状态 字段:user.state
     *
     * @return user.state, -1:表示删除 ，1：正常状态
     */
    public String getState() {
        return state;
    }

    /**
     * 设置 -1:表示删除 ，1：正常状态 字段:user.state
     *
     * @param state the value for user.state, -1:表示删除 ，1：正常状态
     */
    public void setState(String state) {
        this.state = state == null ? null : state.trim();
    }

    /**
     * 获取 创建时间 字段:user.create_time
     *
     * @return user.create_time, 创建时间
     */
    public Date getCreate_time() {
        return create_time;
    }

    /**
     * 设置 创建时间 字段:user.create_time
     *
     * @param create_time the value for user.create_time, 创建时间
     */
    public void setCreate_time(Date create_time) {
        this.create_time = create_time;
    }

    /**
     * 获取 修改时间 字段:user.update_time
     *
     * @return user.update_time, 修改时间
     */
    public Date getUpdate_time() {
        return update_time;
    }

    /**
     * 设置 修改时间 字段:user.update_time
     *
     * @param update_time the value for user.update_time, 修改时间
     */
    public void setUpdate_time(Date update_time) {
        this.update_time = update_time;
    }

    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", mobile='" + mobile + '\'' +
                ", password='" + password + '\'' +
                ", sex='" + sex + '\'' +
                ", birthdate=" + birthdate +
                ", address='" + address + '\'' +
                ", email='" + email + '\'' +
                ", state='" + state + '\'' +
                ", create_time=" + create_time +
                ", update_time=" + update_time +
                '}';
    }
}